name: QParity;
format: circuit-prenex;

parameters: {
    n : int, `n >= 1`;
}

variables: {
    x(i)    where i in 1..n;
    z;
}

blocks: {

    /* === Blocks for quantifers === */
    
    define blocks {
        X := x(i);
    } where i in 1..n;

    define block Z := z;

    define block Q := X, Z;

    block X quantified with E;
    block Z quantified with A;

    /* === Blocks for matrix === */

    define block T(2) := x(1), x(2);
    define blocks grouped in T {
        T(i) := T(s), x(i);
    } where i in 3..n, s = `i-1`;

    define blocks grouped in Ro {
        Ro1 := z, T(n);
        Ro2 := -z, -T(n);
    };

    define block F := Ro1, Ro2;

    block T(2) operated with XOR;
    all blocks in T operated with XOR;
    all blocks in Ro operated with OR;
    block F operated with AND;

    /* define the output block */
    define block Phi := Q, F;

}

output block: Phi;
