name: QParity;
format: circuit-prenex;

parameters: {
    n : int, `n >= 2`;
}

variables: {
    x(i)    where i in 1..n;
    z;
}

blocks: {

    /* === Blocks for quantifers === */
    
    define blocks {
        X := x(i);
    } where i in 1..n;

    define block Z := z;

    define block Q := X, Z;

    block X quantified with ∃;
    block Z quantified with ∀;

    /* === Blocks for matrix === */

    define block T(2) := x(1), x(2);

    define blocks grouped in T {
        T(i) := T(s), x(i);
    } where i in 3..n, s = `i-1`;

    define block ρ := T(n), z;

    block T(2) operated with ⊕;
    all blocks in T operated with ⊕;
    block ρ operated with ⊕;

    /* define the output block */
    define block ϕ := Q, ρ;

}

output block: ϕ;
