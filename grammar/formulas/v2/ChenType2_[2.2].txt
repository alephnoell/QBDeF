name: Chen Type 2
type: circuit

parameters:

    n : natural, n >= 1

variables:

    x(i)   where i in [1, n]
    y(i)   where i in [1, n]

blocks:

    // === blocks for quantifers ===
    
    define blocks
        X(i) := x(i)
    where i in [1, n]
    grouped in X

    define blocks
        Y(i) := y(i)
    where i in [1, n]
    grouped in Y

    define block
        XY := X(i), Y(i)
    where i in [1, n]

    // ===  blocks for circuits  ===

    define blocks
        Ones(0, i) := -x(i), -y(i)
    where i in [1, n]
    grouped in Ones0

    define blocks Ones1 as
        Ones(1, i) := x(i), y(i)
    where i in [1, n]
    grouped in Ones1

    define blocks
        Ones(2, i) := x(i), y(i)
    where i in [1, n]
    grouped in Ones2

    define blocks
        IsAndAdds(k, p, a) := Mu(k, p), Ones(a, k)
    where k in [1, n], p, a in [0, 2]
    grouped is IsAndAdds

    define blocks
        Mu(0, 1) := Ones(0, 1)
        Mu(1, 1) := Ones(1, 1)
        Mu(2, 1) := Ones(2, 1)
        Mu(m, k) := IsAndAdds(k-1, p, a)
    where m in [0, 2], k in [2, n], p in [0, 2], a = (m-p) mod 3
    grouped in Mu

    define block
        Out := -Mu_(n mod 3, n)

quantifiers:

    blocks in X quantified with E
    blocks in Y quantified with A
    
quantifier prefix: XY

operators:

    blocks in Ones0 have operator AND
    blocks in Ones1 have operator XOR
    blocks in Ones2 have operator AND

    blocks in IsAndAdds have operator AND

    block Mu has operator OR

output: Out