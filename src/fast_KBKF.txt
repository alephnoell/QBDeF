value: t = 1000;

name: FAST KBKF;
format: CNF;

parameters: {
    t : int, `t >= 1`;
}

variables: {
    x(i)       where i in 1..t;

    y(0);
    y(i, j)    where i in 1..t, j in 0..1;
    y(i)       where i in `t+1`..`t+t`;
}


blocks:  {

    /*  ==== blocks for quantifers ==== */

    define blocks grouped in X {
        X(i) := x(i);
    } where i in 1..t;

    define block Y(0) := y(0);
    
    define blocks grouped in Y {
        Y(i) := y(i, 0), y(i, 1);
    } where i in 1..t;

    define blocks {
        YRest := y(j);
    } where j in `t+1`..`t+t`;

    define blocks {
        Intermediate := Y(i), X(i);
    } where i in 1..t;

    define block Q := Y(0), Intermediate, YRest;

    all blocks in X quantified with A;
    all blocks in Y quantified with E;

    /* ==== blocks for formula ==== */

    define block CMinus := -y(0);

    define block C(0) := y(0), -y(1, 0), -y(1,1);

    define blocks grouped in C1 {
        C(i, j) := y(i, j), x(i), -y(s1, 0), -y(s1, 1);
    } where i in 1..`t-1`, j in 0..1, s1 = `i+1`;

    define blocks grouped in C2 {
        C(t, j) := y(t, j), x(t), -y(k);
    } where j in 0..1, k in `t+1`..`t+t`;


    define blocks grouped in C3 {
        C(s2, 0) := x(l), y(s2);
        C(s2, 1) := -x(l), y(s2);
    } where l in 1..t, s2 = `t+l`;

    define block F := CMinus, C(0), all blocks in C1, all blocks in C2, all blocks in C3;

    blocks CMinus, C(0) operated with OR;
    all blocks in C1 operated with OR;
    all blocks in C2 operated with OR;
    all blocks in C3 operated with OR;
    
    block F operated with AND;
}

output block: F;