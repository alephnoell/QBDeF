value: t = 10;

name: KBKF;
format: CNF;

parameters: {
    t : int, `t >= 1`;
}

variables: {
    x(i)       where i in 1..t;

    y(0);
    y(i, j)    where i in 1..t, j in 0..1;
    y(i)       where i in `t+1`..`t+t`;
}


blocks:  {

    /*  ==== blocks for quantifers ==== */

    define blocks grouped in X {
        X(i) := x(i);
    } where i in 1..t;
    
    define blocks grouped in Y {
        Y(0) := y(0);
        Y(i) := y(i, 0), y(i, 1);
        YRest := y(j);
    } where i in 1..t, j in `t+1`..`t+t`;

    define blocks {
        Intermediate := Y(i), X(i);
    } where i in 1..t;

    define block Q := Y(0), Intermediate, YRest;

    all blocks in X quantified with A;
    all blocks in Y quantified with E;

    /* ==== blocks for formula ==== */

    define blocks grouped in C {
        CMinus := -y(0);
        C(0) := y(0), -y(1, 0), -y(1,1);
        C(i, j) := y(i, j), x(i), -y(`i+1`, 0), -y(`i+1`, 1);
        C(t, j) := y(t, j), x(t), -y(k);
        C(`t+l`, 0) = x(l), y(`t+l`);
        C(`t+l`, 1) = -x(l), y(`t+l`);
    } where i in 1..`t-1`, j in 0..1, k in `t+1`..`t+t`, l in 1..t;

    define block F := all blocks in C;

    all blocks in C operated with OR;
    block F opereted with AND;
}

output block: F;